@{
    ViewData["Title"] = "Add your Skills";
    Layout = "~/Views/Shared/_AppLayout.cshtml";
}
@model SkillListMV
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Skills Filters</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
            padding: 20px;
            min-height: 100vh;
        }

        .filters-container {
            max-width: 800px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 32px;
            box-shadow: 0 20px 40px rgba(102, 126, 234, 0.1);
            border: 1px solid rgba(102, 126, 234, 0.1);
            animation: slideIn 0.5s ease-out;
        }

        @@keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .filters-title {
            font-size: 32px;
            font-weight: 700;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 32px;
        }

        .form-section {
            margin-bottom: 32px;
        }

        .form-label {
            display: block;
            font-size: 16px;
            font-weight: 600;
            color: #4a5568;
            margin-bottom: 12px;
        }

        .search-container {
            position: relative;
        }

        .search-icon {
            position: absolute;
            left: 16px;
            top: 50%;
            transform: translateY(-50%);
            color: #a0aec0;
            font-size: 18px;
            pointer-events: none;
        }

        .search-input {
            width: 100%;
            padding: 16px 16px 16px 48px;
            border: 2px solid rgba(102, 126, 234, 0.15);
            border-radius: 12px;
            font-size: 16px;
            background: rgba(255, 255, 255, 0.8);
            transition: all 0.3s ease;
            outline: none;
        }

        .search-input:focus {
            border-color: #667eea;
            background: rgba(255, 255, 255, 0.95);
            box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
            transform: translateY(-2px);
        }

        .search-input::placeholder {
            color: #a0aec0;
        }

        .select-dropdown {
            width: 100%;
            padding: 16px 20px;
            border: 2px solid rgba(102, 126, 234, 0.15);
            border-radius: 12px;
            font-size: 16px;
            background: rgba(255, 255, 255, 0.8);
            color: #4a5568;
            cursor: pointer;
            transition: all 0.3s ease;
            outline: none;
            appearance: none;
            background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23667eea' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6,9 12,15 18,9'%3e%3c/polyline%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right 16px center;
            background-size: 16px;
        }

        .select-dropdown:focus {
            border-color: #667eea;
            background-color: rgba(255, 255, 255, 0.95);
            box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
            transform: translateY(-2px);
        }

        .custom-skill-section {
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.05), rgba(118, 75, 162, 0.05));
            padding: 24px;
            border-radius: 16px;
            border: 1px solid rgba(102, 126, 234, 0.1);
            margin-bottom: 32px;
        }

        .custom-skill-title {
            font-size: 20px;
            font-weight: 600;
            color: #667eea;
            margin-bottom: 20px;
        }

        .skill-input-container {
            display: grid;
            grid-template-columns: 1fr auto auto;
            gap: 16px;
            margin-bottom: 20px;
        }

        .skill-name-input {
            padding: 14px 16px;
            border: 2px solid rgba(102, 126, 234, 0.15);
            border-radius: 10px;
            font-size: 14px;
            background: rgba(255, 255, 255, 0.9);
            transition: all 0.3s ease;
            outline: none;
        }

        .skill-name-input:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .skill-name-input::placeholder {
            color: #a0aec0;
        }

        .skill-dropdown {
            padding: 14px 16px;
            border: 2px solid rgba(102, 126, 234, 0.15);
            border-radius: 10px;
            font-size: 14px;
            background: rgba(255, 255, 255, 0.9);
            color: #4a5568;
            cursor: pointer;
            transition: all 0.3s ease;
            outline: none;
            appearance: none;
            background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23667eea' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6,9 12,15 18,9'%3e%3c/polyline%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right 12px center;
            background-size: 14px;
            min-width: 140px;
        }

        .skill-dropdown:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .add-custom-btn {
            padding: 14px 28px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            border-radius: 10px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .add-custom-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s ease;
        }

        .add-custom-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
        }

        .add-custom-btn:hover::before {
            left: 100%;
        }

        .skills-display {
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.08), rgba(118, 75, 162, 0.08));
            padding: 32px;
            border-radius: 20px;
            border: 1px solid rgba(102, 126, 234, 0.15);
            animation: fadeInUp 0.6s ease-out 0.3s both;
        }

        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .skills-title {
            font-size: 24px;
            font-weight: 700;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 24px;
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .skills-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 12px;
        }

        .skill-tag {
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.7));
            border: 2px solid rgba(102, 126, 234, 0.2);
            border-radius: 25px;
            padding: 12px 20px;
            font-size: 14px;
            font-weight: 500;
            color: #667eea;
            text-align: center;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
            cursor: pointer;
            animation: skillAppear 0.4s ease-out;
        }

        @@keyframes skillAppear {
            from {
                opacity: 0;
                transform: scale(0.8);
            }
            to {
                opacity: 1;
                transform: scale(1);
            }
        }

        .skill-tag::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
            transition: left 0.5s ease;
        }

        .skill-tag:hover {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.25);
        }

        .skill-tag:hover::before {
            left: 100%;
        }

        .skill-level {
            font-size: 11px;
            opacity: 0.8;
            display: block;
            margin-top: 4px;
        }

        .remove-skill {
            position: absolute;
            top: -8px;
            right: -8px;
            width: 20px;
            height: 20px;
            background: #e53e3e;
            color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
            cursor: pointer;
            opacity: 0;
            transition: all 0.3s ease;
            font-weight: bold;
        }

        .skill-tag:hover .remove-skill {
            opacity: 1;
        }

        .empty-state {
            text-align: center;
            color: #a0aec0;
            font-style: italic;
            padding: 40px 20px;
        }

        .stats-bar {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
            padding: 16px;
            background: rgba(255, 255, 255, 0.6);
            border-radius: 12px;
            border: 1px solid rgba(102, 126, 234, 0.1);
        }

        .stat-item {
            text-align: center;
        }

        .stat-number {
            font-size: 24px;
            font-weight: 700;
            color: #667eea;
        }

        .stat-label {
            font-size: 12px;
            color: #718096;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        @@media (max-width: 768px) {
            .skill-input-container {
                grid-template-columns: 1fr;
            }

            .skills-grid {
                grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            }
        }
    </style>
</head>
<body>
    <partial name="_NavPartial" />
    <div class="filters-container">
        <h1 class="filters-title">Add Your Skills!</h1>
        <div class="custom-skill-section">
            <h3 class="custom-skill-title">Add Custom Skill</h3>
            <div class="skill-input-container">
                <form id="addSkillForm" method="post" asp-action="AddSkill" class="skill-input-container">
                <input type="text" name="Name" class="skill-name-input" placeholder="Skill name..." required />

                <select name="Level" class="skill-dropdown" id="skillLevel">
                    <option value="Beginner">Beginner</option>
                    <option value="Intermediate" selected>Intermediate</option>
                    <option value="Advanced">Advanced</option>
                    <option value="Expert">Expert</option>
                </select>

                <select name="Category" class="skill-dropdown" id="skillCategory">
                    <option value="Programming">Programming</option>
                    <option value="Marketing">Marketing</option>
                    <option value="Writing">Writing</option>
                    <option value="Management">Management</option>
                    <option value="Finance">Finance</option>
                    <option value="Technology">Technology</option>
                    <option value="Design">Design</option>
                    <option value="Business">Business</option>
                    <option value="Language">Language</option>
                    <option value="SoftSkill">SoftSkill</option>
                    <option value="Methodology">Methodology</option>
                    <option value="Other">Other</option>
                </select>

                <button type="submit" class="add-custom-btn">➕ Add Custom</button>
            </form>


        </div>

        <div class="skills-display">
            <div class="stats-bar">
                <div class="stat-item">
                        <div class="stat-number" id="totalSkills">@Model.totalSkillsCount</div>
                    <div class="stat-label">Total Skills</div>
                </div>
                <div class="stat-item">
                        <div class="stat-number" id="beginnerSkills">@Model.totalBeginnerCount</div>
                    <div class="stat-label">Beginner Level</div>
                </div>
                <div class="stat-item">
                        <div class="stat-number" id="intermediateSkills">@Model.totalIntermediateCount</div>
                    <div class="stat-label">Intermediate Level</div>
                </div>
                <div class="stat-item">
                        <div class="stat-number" id="expertSkills">@Model.totalExpertCount</div>
                    <div class="stat-label">Expert Level</div>
                </div>
            </div>

            <h2 class="skills-title">
                🎯 Your Skills
            </h2>
            <div class="skills-grid" id="skillsGrid">
                <div class="skills-grid" id="skillsGrid">
                    @if (Model.skills == null || !Model.skills.Any())
                    {
                        <div class="empty-state">No skills found. Add some skills to get started!</div>
                    }
                    else
                    {
                            var index = 0;
                        foreach (var skill in Model.skills)
                        {
                                <div class="skill-tag" style="animation-delay:@(index * 0.1)s">
                                @skill.Name
                                <span class="skill-level">@skill.Level</span>
                                
                            </div>
                           
                        }
                    }
                </div>

            </div>
        </div>
    </div>
</div>

    <script>
        
        function renderSkills(skills = userSkills) {
             const skillsGrid = document.getElementById('skillsGrid');

             if (skills.length === 0) {
                 skillsGrid.innerHTML = '<div class="empty-state">No skills found. Add some skills to get started!</div>';
                 return;
             }

             skillsGrid.innerHTML = skills.map((skill, index) => `
                 <div class="skill-tag" style="animation-delay: ${index * 0.1}s">
                     ${skill.name}
                     <span class="skill-level">${skill.level}</span>
                     <div class="remove-skill" onclick="removeSkill(${index})" title="Remove skill">×</div>
                 </div>
             `).join('');

             updateStats(skills);
         }
       

        function addCustomSkill() {
            const nameInput = document.getElementById('skillNameInput');
            const levelSelect = document.getElementById('skillLevel');
            const categorySelect = document.getElementById('skillCategory');

            const skillName = nameInput.value.trim();
            if (!skillName) {
                nameInput.style.borderColor = '#e53e3e';
                nameInput.placeholder = 'Please enter a skill name';
                setTimeout(() => {
                    nameInput.style.borderColor = '';
                    nameInput.placeholder = 'Skill name...';
                }, 2000);
                return;
            }

            // Check if skill already exists
            if (userSkills.some(skill => skill.name.toLowerCase() === skillName.toLowerCase())) {
                nameInput.style.borderColor = '#f56500';
                nameInput.value = '';
                nameInput.placeholder = 'Skill already exists!';
                setTimeout(() => {
                    nameInput.style.borderColor = '';
                    nameInput.placeholder = 'Skill name...';
                }, 2000);
                return;
            }

            const newSkill = {
                name: skillName,
                level: levelSelect.value.charAt(0).toUpperCase() + levelSelect.value.slice(1),
                category: categorySelect.value
            };

            userSkills.push(newSkill);
            nameInput.value = '';

            // Add success animation to button
            const btn = document.querySelector('.add-custom-btn');
            btn.style.background = 'linear-gradient(135deg, #48bb78, #38a169)';
            btn.innerHTML = '✓ Added!';
            setTimeout(() => {
                btn.style.background = 'linear-gradient(135deg, #667eea, #764ba2)';
                btn.innerHTML = '➕ Add Custom';
            }, 1500);

            renderSkills();
        }

        function removeSkill(index) {
            userSkills.splice(index, 1);
            renderSkills();
        }

        function filterSkills() {
            const searchTerm = document.getElementById('searchSkills').value.toLowerCase();
            const categoryFilter = document.getElementById('categoryFilter').value;

            let filteredSkills = userSkills.filter(skill => {
                const matchesSearch = skill.name.toLowerCase().includes(searchTerm);
                const matchesCategory = categoryFilter === 'all' || skill.category === categoryFilter;
                return matchesSearch && matchesCategory;
            });

            renderSkills(filteredSkills);
        }

        // Event listeners
        document.getElementById('searchSkills').addEventListener('input', filterSkills);
        document.getElementById('categoryFilter').addEventListener('change', filterSkills);

        

        // Add some interactive effects
        document.addEventListener('DOMContentLoaded', function() {
            // Add subtle floating animation to the container
            const container = document.querySelector('.filters-container');

            setInterval(() => {
                container.style.transform = `translateY(${Math.sin(Date.now() / 3000) * 1}px)`;
            }, 16);
        });
    </script>
</body>
</html>