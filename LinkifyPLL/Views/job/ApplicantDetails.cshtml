@{
    ViewData["Title"] = "Apply for Position";
    Layout = "~/Views/Shared/_AppLayout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-purple: #7c3aed;
            --dark-purple: #5b21b6;
            --light-purple: #a855f7;
            --purple-50: #faf5ff;
            --purple-100: #f3e8ff;
            --purple-200: #e9d5ff;
            --purple-300: #d8b4fe;
            --purple-500: #8b5cf6;
            --purple-600: #7c3aed;
            --purple-700: #6d28d9;
            --purple-900: #4c1d95;
            --gray-50: #f9fafb;
            --gray-100: #f3f4f6;
            --gray-200: #e5e7eb;
            --gray-300: #d1d5db;
            --gray-400: #9ca3af;
            --gray-500: #6b7280;
            --gray-600: #4b5563;
            --gray-700: #374151;
            --gray-800: #1f2937;
            --gray-900: #111827;
            --success: #10b981;
            --danger: #ef4444;
            --warning: #f59e0b;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, var(--purple-50) 0%, var(--purple-100) 100%);
            color: var(--gray-800);
            line-height: 1.6;
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 900px;
            margin: 0 auto;
        }

        /* Header with gradient */
        .header {
            text-align: center;
            margin-bottom: 40px;
            position: relative;
            overflow: hidden;
        }

        .header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, var(--primary-purple), var(--light-purple));
            border-radius: 24px;
            opacity: 0.1;
        }

        .header-content {
            position: relative;
            padding: 40px 20px;
        }

        .header h1 {
            font-size: 2.5rem;
            font-weight: 700;
            background: linear-gradient(135deg, var(--primary-purple), var(--light-purple));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 8px;
        }

        .header p {
            font-size: 1.1rem;
            color: var(--gray-600);
            margin-bottom: 20px;
        }

        .job-badge {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            background: white;
            padding: 12px 24px;
            border-radius: 50px;
            box-shadow: 0 4px 20px rgba(124, 58, 237, 0.15);
            border: 2px solid var(--purple-200);
        }

        .job-badge i {
            color: var(--primary-purple);
        }

        .job-badge span {
            font-weight: 600;
            color: var(--gray-700);
        }

        /* Main form card */
        .form-card {
            background: white;
            border-radius: 24px;
            box-shadow: 0 20px 60px rgba(124, 58, 237, 0.1);
            border: 1px solid var(--purple-100);
            overflow: hidden;
            position: relative;
        }

        .form-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 6px;
            background: linear-gradient(90deg, var(--primary-purple), var(--light-purple), var(--purple-500));
        }

        .form-content {
            padding: 40px;
        }

        /* Section headers */
        .section {
            margin-bottom: 40px;
        }

        .section:last-child {
            margin-bottom: 0;
        }

        .section-header {
            display: flex;
            align-items: center;
            gap: 12px;
            margin-bottom: 24px;
            padding-bottom: 12px;
            border-bottom: 2px solid var(--purple-100);
        }

        .section-icon {
            width: 48px;
            height: 48px;
            background: linear-gradient(135deg, var(--primary-purple), var(--light-purple));
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.2rem;
        }

        .section-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--gray-800);
        }

        /* Form groups */
        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 24px;
        }

        .form-label {
            display: block;
            font-weight: 600;
            color: var(--gray-700);
            margin-bottom: 8px;
            font-size: 0.9rem;
        }

        .required {
            color: var(--danger);
        }

        /* Input styles */
        .form-input, .form-select, .form-textarea {
            width: 100%;
            padding: 16px;
            border: 2px solid var(--gray-200);
            border-radius: 12px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: white;
            font-family: inherit;
        }

        .form-input:focus, .form-select:focus, .form-textarea:focus {
            outline: none;
            border-color: var(--primary-purple);
            box-shadow: 0 0 0 4px rgba(124, 58, 237, 0.1);
            transform: translateY(-2px);
        }

        .form-input::placeholder, .form-textarea::placeholder {
            color: var(--gray-400);
        }

        .form-textarea {
            resize: vertical;
            min-height: 120px;
            font-family: inherit;
        }

        /* File upload */
        .file-upload {
            border: 2px dashed var(--purple-200);
            border-radius: 16px;
            padding: 40px 20px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            background: var(--purple-50);
        }

        .file-upload:hover {
            border-color: var(--primary-purple);
            background: var(--purple-100);
            transform: translateY(-2px);
        }

        .file-upload.dragover {
            border-color: var(--primary-purple);
            background: var(--purple-200);
            transform: scale(1.02);
        }

        .file-upload-icon {
            width: 64px;
            height: 64px;
            background: linear-gradient(135deg, var(--primary-purple), var(--light-purple));
            border-radius: 16px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.5rem;
            margin: 0 auto 16px;
        }

        .file-upload-text {
            font-size: 1.1rem;
            font-weight: 600;
            color: var(--gray-700);
            margin-bottom: 8px;
        }

        .file-upload-subtext {
            color: var(--gray-500);
            font-size: 0.9rem;
        }

        .file-upload input[type="file"] {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
            cursor: pointer;
        }

        /* Uploaded file preview */
        .file-preview {
            display: flex;
            align-items: center;
            gap: 16px;
            background: var(--purple-50);
            border: 2px solid var(--purple-200);
            border-radius: 12px;
            padding: 16px;
            margin-top: 16px;
        }

        .file-preview-icon {
            width: 48px;
            height: 48px;
            background: var(--success);
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.2rem;
        }

        .file-info h4 {
            font-weight: 600;
            color: var(--gray-800);
            margin-bottom: 4px;
        }

        .file-info p {
            font-size: 0.9rem;
            color: var(--gray-500);
        }

        .remove-file {
            background: none;
            border: none;
            color: var(--gray-400);
            cursor: pointer;
            padding: 8px;
            border-radius: 8px;
            transition: all 0.2s ease;
        }

        .remove-file:hover {
            background: var(--gray-100);
            color: var(--danger);
        }

        /* Checkboxes */
        .checkbox-group {
            margin: 24px 0;
        }

        .checkbox {
            display: flex;
            align-items: flex-start;
            gap: 12px;
            margin-bottom: 16px;
        }

        .checkbox input[type="checkbox"] {
            width: 20px;
            height: 20px;
            border: 2px solid var(--gray-300);
            border-radius: 4px;
            cursor: pointer;
            position: relative;
            appearance: none;
            background: white;
            transition: all 0.3s ease;
        }

        .checkbox input[type="checkbox"]:checked {
            background: var(--primary-purple);
            border-color: var(--primary-purple);
        }

        .checkbox input[type="checkbox"]:checked::before {
            content: '✓';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: white;
            font-weight: bold;
            font-size: 0.8rem;
        }

        .checkbox label {
            cursor: pointer;
            color: var(--gray-700);
            font-size: 0.95rem;
            line-height: 1.5;
        }

        .checkbox a {
            color: var(--primary-purple);
            text-decoration: none;
            font-weight: 600;
        }

        .checkbox a:hover {
            text-decoration: underline;
        }

        /* Buttons */
        .btn {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            padding: 16px 32px;
            border-radius: 12px;
            font-weight: 600;
            font-size: 1rem;
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            position: relative;
            overflow: hidden;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.6s ease;
        }

        .btn:hover::before {
            left: 100%;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary-purple), var(--light-purple));
            color: white;
            box-shadow: 0 8px 25px rgba(124, 58, 237, 0.3);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 12px 35px rgba(124, 58, 237, 0.4);
        }

        .btn-secondary {
            background: white;
            color: var(--primary-purple);
            border: 2px solid var(--purple-200);
        }

        .btn-secondary:hover {
            background: var(--purple-50);
            border-color: var(--primary-purple);
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none !important;
        }

        .btn-submit {
            width: 100%;
            padding: 20px;
            font-size: 1.1rem;
            margin-top: 20px;
        }

        /* Loading animation */
        .loading::after {
            content: '';
            width: 20px;
            height: 20px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-left: 8px;
        }

        @@keyframes spin {
            to { transform: rotate(360deg); }
        }

        /* Success message */
        .success-message {
            background: white;
            border-radius: 24px;
            box-shadow: 0 20px 60px rgba(16, 185, 129, 0.15);
            padding: 60px 40px;
            text-align: center;
            border: 1px solid #d1fae5;
            display: none;
        }

        .success-icon {
            width: 80px;
            height: 80px;
            background: var(--success);
            border-radius: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 2rem;
            margin: 0 auto 24px;
            animation: bounce 0.8s ease;
        }

        @@keyframes bounce {
            0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
            40% { transform: translateY(-10px); }
            60% { transform: translateY(-5px); }
        }

        .success-message h2 {
            font-size: 1.8rem;
            color: var(--success);
            margin-bottom: 16px;
        }

        .success-message p {
            color: var(--gray-600);
            margin-bottom: 30px;
            font-size: 1.1rem;
        }

        /* Responsive design */
        @@media (max-width: 768px) {
            .container {
                padding: 0 10px;
            }

            .header h1 {
                font-size: 2rem;
            }

            .form-content {
                padding: 30px 20px;
            }

            .form-row {
                grid-template-columns: 1fr;
                gap: 0;
            }

            .section-header {
                flex-direction: column;
                text-align: center;
            }

            .file-upload {
                padding: 30px 15px;
            }

            .success-message {
                padding: 40px 20px;
            }
        }

        @@media (max-width: 480px) {
            .header-content {
                padding: 30px 15px;
            }

            .job-badge {
                padding: 10px 20px;
                font-size: 0.9rem;
            }

            .btn {
                padding: 14px 24px;
            }
        }

        /* Floating animation */
        @@keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
        }

        .floating {
            animation: float 6s ease-in-out infinite;
        }
    </style>
</head>
<body>
    @model ApplicationDetailsMV
    <partial name="_NavPartial" />
    <div class="container">
        <!-- Header -->
        <div class="header floating">
            <div class="header-content">
                <h1>Join Our Team</h1>
                <p>Take the next step in your career journey</p>
                <div class="job-badge">
                    <i class="fas fa-briefcase"></i>
                    <span>Software Developer Position</span>
                </div>
            </div>
        </div>

        <!-- Application Form -->
        <div class="form-card">
            <div class="form-content">
                <form id="applicationForm" asp-action="ApplicantDetails" asp-controller="Job" method="post" enctype="multipart/form-data">
                    <input type="hidden" asp-for="JobId" />
                    <!-- Personal Information -->
                    <div class="section">
                        <div class="section-header">
                            <div class="section-icon">
                                <i class="fas fa-user"></i>
                            </div>
                            <h2 class="section-title">Personal Information</h2>
                        </div>

                        <div class="form-row">
                            <div class="form-group">
                                <label asp-for="FirstName" class="form-label">First Name <span class="required">*</span></label>
                                <input asp-for="FirstName" type="text" class="form-input" required placeholder="Enter your first name">
                                <span asp-validation-for="FirstName" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="LastName" class="form-label">Last Name <span class="required">*</span></label>
                                <input type="text" class="form-input" asp-for="LastName" required placeholder="Enter your last name">
                                <span asp-validation-for="LastName" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="form-group">
                            <label asp-for="Email" class="form-label">Email Address <span class="required">*</span></label>
                            <input asp-for="Email" type="email" class="form-input" required placeholder="your.email@example.com">
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="form-row">
                            <div class="form-group">
                                <label asp-for="Phone" class="form-label">Phone Number</label>
                                <input asp-for="Phone" type="tel" class="form-input" placeholder="+1 (555) 123-4567">
                            </div>
                            <div class="form-group">
                                <label asp-for="LinkedInProfile" class="form-label">LinkedIn Profile</label>
                                <input asp-for="LinkedInProfile" type="text" class="form-input" placeholder="www.linkedin.com/in/yourprofile">
                            </div>
                        </div>
                        <div class="form-group">
                            <label asp-for="Location" class="form-label">Location <span class="required">*</span></label>
                            <input asp-for="Location" type="text" class="form-input" required placeholder="your location">
                            
                        </div>
                    </div>

                    <!-- Experience & Documents -->
                    <div class="section">
                        <div class="section-header">
                            <div class="section-icon">
                                <i class="fas fa-file-alt"></i>
                            </div>
                            <h2 class="section-title">Experience & Documents</h2>
                        </div>

                        <div class="form-group">
                            <label asp-for="CoverLetter" class="form-label">Cover Letter</label>
                            <div class="file-upload" onclick="document.getElementById('coverLetter').click()">
                                <input asp-for="CoverLetter" type="file" id="coverLetter" accept=".pdf,.jpg,.jpeg,.png">
                                <div class="file-upload-icon">
                                    <i class="fas fa-file-upload"></i>
                                </div>
                                <div class="file-upload-text">Upload cover letter</div>
                                <div class="file-upload-subtext">Optional - PDF, JPG, or PNG files (Max 10MB)</div>
                            </div>
                            <div id="coverLetterPreview"></div>
                            <span asp-validation-for="CoverLetter" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="Experience" class="form-label">Years of Experience <span class="required">*</span></label>
                            <select class="form-select" asp-for="Experience" required>
                                <option value="">Select your experience level</option>
                                <option value="0-1">0-1 years (Entry Level)</option>
                                <option value="1-3">1-3 years (Junior)</option>
                                <option value="3-5">3-5 years (Mid-level)</option>
                                <option value="5-10">5-10 years (Senior)</option>
                                <option value="10+">10+ years (Expert)</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label asp-for="Motivation" class="form-label">Why are you interested in this position?</label>
                            <textarea class="form-textarea" asp-for="Motivation" placeholder="Tell us what excites you about this opportunity and how you can contribute to our team..." maxlength="1000"></textarea>
                            <div id="charCount" style="text-align: right; font-size: 0.9rem; color: var(--gray-500); margin-top: 8px;">0/1000 characters</div>
                        </div>
                    </div>

                    <!-- Agreement -->
                    <div class="section">
                        <div class="section-header">
                            <div class="section-icon">
                                <i class="fas fa-check-circle"></i>
                            </div>
                            <h2 class="section-title">Agreement</h2>
                        </div>

                        <div class="checkbox-group">
                            <div class="checkbox">
                                <input asp-for="TermsAccepted" type="checkbox" id="terms" required>
                                <label asp-for="TermsAccepted" for="terms">
                                    I agree to the <a href="#" target="_blank">Terms of Service</a> and <a href="#" target="_blank">Privacy Policy</a> <span class="required">*</span>
                                </label>
                            </div>

                            <div class="checkbox">
                                <input asp-for="RecieveUpdates" type="checkbox" id="updates">
                                <label asp-for="RecieveUpdates" for="updates">
                                    I would like to receive updates about this position and similar opportunities
                                </label>
                            </div>
                        </div>
                    </div>

                    <!-- Submit Button -->
                    <button type="submit" class="btn btn-primary btn-submit">
                        <i class="fas fa-paper-plane"></i>
                        Submit Application
                    </button>
                </form>
            </div>
        </div>

        <!-- Success Message -->
        <div class="success-message" id="successMessage">
            <div class="success-icon">
                <i class="fas fa-check"></i>
            </div>
            <h2>Application Submitted Successfully!</h2>
            <p>Thank you for your interest in joining our team. We've received your application and will review it carefully. You should receive a confirmation email shortly.</p>
            <button class="btn btn-primary" onclick="window.location.reload()">
                <i class="fas fa-plus"></i>
                Submit Another Application
            </button>
        </div>
    </div>

    <script>
        // File upload functionality
               function handleFileUpload(inputId, previewId) {
            const input = document.getElementById(inputId);
            const preview = document.getElementById(previewId);

            if (!input || !preview) return;

            input.addEventListener('change', function(e) {
                const file = e.target.files[0];
                if (!file) return;

                const fileSize = (file.size / 1024 / 1024).toFixed(2);
                preview.innerHTML = `
                    <div class="file-preview">
                        <div class="file-preview-icon">
                            <i class="fas fa-file-alt"></i>
                        </div>
                        <div class="file-info">
                            <h4>${file.name}</h4>
                            <p>${fileSize} MB</p>
                        </div>
                        <button type="button" class="remove-file" onclick="removeFile('${inputId}', '${previewId}')">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                `;
            });
        }

        function removeFile(inputId, previewId) {
            const input = document.getElementById(inputId);
            const preview = document.getElementById(previewId);

            if (input) input.value = '';
            if (preview) preview.innerHTML = '';
        }
            

        // Drag and drop functionality
        function setupDragDrop() {
            const uploadAreas = document.querySelectorAll('.file-upload');

            uploadAreas.forEach(area => {
                const input = area.querySelector('input[type="file"]');

                ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                    area.addEventListener(eventName, preventDefaults, false);
                });

                function preventDefaults(e) {
                    e.preventDefault();
                    e.stopPropagation();
                }

                ['dragenter', 'dragover'].forEach(eventName => {
                    area.addEventListener(eventName, () => area.classList.add('dragover'));
                });

                ['dragleave', 'drop'].forEach(eventName => {
                    area.addEventListener(eventName, () => area.classList.remove('dragover'));
                });

                area.addEventListener('drop', function(e) {
                    const files = e.dataTransfer.files;
                    if (files.length > 0) {
                        input.files = files;
                        input.dispatchEvent(new Event('change'));
                    }
                });
            });
        }
        
        // Character counter for textarea
        function setupCharacterCounter() {
            const textarea = document.querySelector('textarea[name="motivation"]');
            const counter = document.getElementById('charCount');

            if (!textarea || !counter) return;

            textarea.addEventListener('input', function() {
                const current = this.value.length;
                const max = this.getAttribute('maxlength');
                counter.textContent = `${current}/${max} characters`;
                
                if (current > max * 0.9) {
                    counter.style.color = 'var(--warning)';
                } else if (current === parseInt(max)) {
                    counter.style.color = 'var(--danger)';
                } else {
                    counter.style.color = 'var(--gray-500)';
                }
            });
        }

        // Real-time validation feedback
        function setupRealTimeValidation() {
            const inputs = document.querySelectorAll('input, select, textarea');

            inputs.forEach(input => {
                input.addEventListener('blur', function() {
                    if (this.hasAttribute('required') && !this.value.trim()) {
                        this.style.borderColor = 'var(--danger)';
                        this.style.boxShadow = '0 0 0 4px rgba(239, 68, 68, 0.1)';
                    } else {
                        this.style.borderColor = 'var(--gray-200)';
                        this.style.boxShadow = 'none';
                    }
                });

                input.addEventListener('focus', function() {
                    if (this.style.borderColor === 'rgb(239, 68, 68)') {
                        this.style.borderColor = 'var(--primary-purple)';
                        this.style.boxShadow = '0 0 0 4px rgba(124, 58, 237, 0.1)';
                    }
                });
            });
        }

        // Smooth animations and micro-interactions
        function setupAnimations() {
            // Add hover effects to form inputs
            const inputs = document.querySelectorAll('.form-input, .form-select, .form-textarea');
            inputs.forEach(input => {
                input.addEventListener('mouseenter', function() {
                    if (!this.matches(':focus')) {
                        this.style.transform = 'translateY(-1px)';
                        this.style.boxShadow = '0 4px 12px rgba(124, 58, 237, 0.1)';
                    }
                });

                input.addEventListener('mouseleave', function() {
                    if (!this.matches(':focus')) {
                        this.style.transform = 'translateY(0)';
                        this.style.boxShadow = 'none';
                    }
                });
            });

            // Animate sections on scroll
            const sections = document.querySelectorAll('.section');
            const observerOptions = {
                threshold: 0.1,
                rootMargin: '0px 0px -50px 0px'
            };

            const observer = new IntersectionObserver(function(entries) {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.opacity = '1';
                        entry.target.style.transform = 'translateY(0)';
                    }
                });
            }, observerOptions);

            sections.forEach(section => {
                section.style.opacity = '0';
                section.style.transform = 'translateY(20px)';
                section.style.transition = 'all 0.6s ease';
                observer.observe(section);
            });
        }

        // Enhanced file upload with preview
        function enhanceFileUpload() {
            const fileInputs = document.querySelectorAll('input[type="file"]');

            fileInputs.forEach(input => {
                input.addEventListener('change', function() {
                    const file = this.files[0];
                    if (!file) return;

                    // Create visual feedback during upload simulation
                    const uploadArea = this.closest('.file-upload');
                    const icon = uploadArea.querySelector('.file-upload-icon');
                    
                    // Simulate upload progress
                    icon.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                    uploadArea.style.background = 'var(--purple-100)';
                    
                    setTimeout(() => {
                        icon.innerHTML = '<i class="fas fa-check"></i>';
                        uploadArea.style.background = '#d1fae5';
                        
                        setTimeout(() => {
                            uploadArea.style.background = 'var(--purple-50)';
                            icon.innerHTML = this.id === 'resume' ? '<i class="fas fa-cloud-upload-alt"></i>' : '<i class="fas fa-file-upload"></i>';
                        }, 1000);
                    }, 500);
                });
            });
        }
        
        // Initialize everything when DOM is loaded
        document.addEventListener('DOMContentLoaded', function() {
            handleFileUpload('coverLetter', 'coverLetterPreview');
            setupDragDrop();
            setupCharacterCounter();
            setupRealTimeValidation();
            setupAnimations();
            enhanceFileUpload();
        });
    </script>
</body>
</html>