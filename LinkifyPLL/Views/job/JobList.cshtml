@using LinkifyDAL.Enums
@using LinkifyPLL.Models
@using Microsoft.AspNetCore.Html
@{
    ViewData["Title"] = "Add New Job Posting";
    Layout = "~/Views/Shared/_AppLayout.cshtml";
}
@model JobListMV
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Job Postings</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 50%, #a855f7 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
            color: white;
            margin-top: 35px;
        }

            .header h1 {
                font-size: 2.5rem;
                font-weight: 700;
                margin-bottom: 8px;
                letter-spacing: -0.025em;
            }

            .header p {
                font-size: 1.1rem;
                opacity: 0.9;
                font-weight: 400;
            }

        .stats-bar {
            display: flex;
            justify-content: center;
            gap: 40px;
            margin: 30px 0;
            flex-wrap: wrap;
        }

        .stat {
            text-align: center;
            color: white;
        }

        .stat-number {
            font-size: 2rem;
            font-weight: 700;
            display: block;
        }

        .stat-label {
            font-size: 0.9rem;
            opacity: 0.8;
        }

        .filters {
            background: white;
            border-radius: 20px;
            padding: 20px 30px;
            margin-bottom: 30px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            display: flex;
            align-items: center;
            justify-content: space-between;
            flex-wrap: wrap;
            gap: 20px;
        }

        .filter-section {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .filter-label {
            font-weight: 600;
            color: #374151;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .filter-buttons {
            display: flex;
            gap: 8px;
            flex-wrap: wrap;
        }

        .filter-button {
            padding: 8px 16px;
            border: 1.5px solid #e5e7eb;
            border-radius: 20px;
            background: white;
            color: #6b7280;
            font-size: 0.875rem;
            cursor: pointer;
            transition: all 0.2s;
            font-weight: 500;
        }

            .filter-button.active {
                background: #6366f1;
                color: white;
                border-color: #6366f1;
            }

            .filter-button:hover:not(.active) {
                border-color: #6366f1;
                color: #6366f1;
            }

        .add-job-btn {
            background: linear-gradient(135deg, #6366f1, #8b5cf6);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 50px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s;
            display: flex;
            align-items: center;
            gap: 8px;
            text-decoration: none;
        }

            .add-job-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 25px rgba(99, 102, 241, 0.4);
            }

        .jobs-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
            gap: 24px;
        }

        .job-card {
            background: white;
            border-radius: 20px;
            padding: 24px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            transition: all 0.2s;
            position: relative;
        }

            .job-card:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            }

            .job-card.inactive {
                opacity: 0.6;
                border: 2px dashed #d1d5db;
            }

        .job-header {
            display: flex;
            align-items: flex-start;
            justify-content: space-between;
            margin-bottom: 16px;
        }

        .job-icon {
            width: 48px;
            height: 48px;
            background: linear-gradient(135deg, #6366f1, #8b5cf6);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 700;
            font-size: 1.1rem;
            flex-shrink: 0;
        }

        .job-title-section {
            flex: 1;
            margin-left: 16px;
        }

        .job-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: #111827;
            margin-bottom: 4px;
            line-height: 1.3;
        }

        .job-company {
            color: #6b7280;
            font-size: 0.9rem;
            font-weight: 500;
        }

        .job-menu {
            position: relative;
        }

        .menu-button {
            background: none;
            border: none;
            color: #9ca3af;
            cursor: pointer;
            padding: 8px;
            border-radius: 8px;
            transition: all 0.2s;
            font-size: 1.2rem;
        }

            .menu-button:hover {
                background: #f3f4f6;
                color: #6b7280;
            }

        .dropdown-menu {
            position: absolute;
            top: 100%;
            right: 0;
            background: white;
            border: 1px solid #e5e7eb;
            border-radius: 12px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            min-width: 160px;
            z-index: 100;
            opacity: 0;
            visibility: hidden;
            transform: translateY(-10px);
            transition: all 0.2s;
        }

            .dropdown-menu.show {
                opacity: 1;
                visibility: visible;
                transform: translateY(0);
            }

        .dropdown-item {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 12px 16px;
            color: #374151;
            font-size: 0.9rem;
            cursor: pointer;
            transition: background 0.2s;
            border: none;
            background: none;
            width: 100%;
            text-align: left;
        }

            .dropdown-item:hover {
                background: #f9fafb;
            }

            .dropdown-item.danger {
                color: #dc2626;
            }

                .dropdown-item.danger:hover {
                    background: #fef2f2;
                }

        .job-meta {
            display: flex;
            align-items: center;
            gap: 16px;
            margin-bottom: 12px;
            flex-wrap: wrap;
        }

        .job-meta-item {
            display: flex;
            align-items: center;
            gap: 6px;
            font-size: 0.875rem;
            color: #6b7280;
        }

            .job-meta-item i {
                font-size: 0.8rem;
            }

        .location-icon {
            color: #ef4444;
        }

        .job-description {
            color: #6b7280;
            line-height: 1.5;
            margin-bottom: 16px;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .job-skills {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            margin-bottom: 16px;
        }

        .skill-tag {
            background: #ede9fe;
            color: #6366f1;
            padding: 4px 10px;
            border-radius: 12px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .job-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding-top: 16px;
            border-top: 1px solid #f3f4f6;
        }

        .job-salary {
            font-size: 1.1rem;
            font-weight: 600;
            color: #111827;
        }

        .job-status {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .status-badge {
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

            .status-badge.active {
                background: #dcfce7;
                color: #166534;
            }

            .status-badge.inactive {
                background: #fee2e2;
                color: #991b1b;
            }

            .status-badge.expired {
                background: #fef3c7;
                color: #92400e;
            }

        .job-date {
            font-size: 0.8rem;
            color: #9ca3af;
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: white;
        }

            .empty-state i {
                font-size: 4rem;
                margin-bottom: 16px;
                opacity: 0.6;
            }

            .empty-state h3 {
                font-size: 1.5rem;
                margin-bottom: 8px;
            }

            .empty-state p {
                opacity: 0.8;
                margin-bottom: 24px;
            }

        @@media (max-width: 768px) {
            .jobs-grid

        {
            grid-template-columns: 1fr;
        }

        .filters {
            flex-direction: column;
            align-items: flex-start;
        }

        .stats-bar {
            gap: 20px;
        }

        .job-meta {
            flex-direction: column;
            align-items: flex-start;
            gap: 8px;
        }

        }

        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 1000;
        }

            .modal.show {
                display: flex;
                align-items: center;
                justify-content: center;
            }

        .modal-content {
            background: white;
            border-radius: 20px;
            padding: 30px;
            max-width: 400px;
            width: 90%;
            text-align: center;
        }

            .modal-content h3 {
                color: #374151;
                margin-bottom: 16px;
            }

            .modal-content p {
                color: #6b7280;
                margin-bottom: 24px;
            }

        .modal-buttons {
            display: flex;
            gap: 12px;
            justify-content: center;
        }

        .modal-btn {
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s;
        }

            .modal-btn.primary {
                background: #dc2626;
                color: white;
            }

            .modal-btn.secondary {
                background: #f3f4f6;
                color: #6b7280;
            }
    </style>
</head>
<body>
    <partial name="_NavPartial" />
        <div class="header">
            <h1>My Job Postings</h1>
            <p>Manage and track your job opportunities</p>

            <div class="stats-bar">
                <div class="stat">
                    <span class="stat-number" id="totalJobs">@Model.TotalJobsCount</span>
                    <span class="stat-label">Total Jobs</span>
                </div>
            <div class="stat">
                <span class="stat-number" id="activeJobs">@Model.ActiveJobsCount</span>
                <span class="stat-label">Active</span>
            </div>
                <div class="stat">
                    <span class="stat-number" id="applications">@Model.ApplicationsCount</span>
                    <span class="stat-label">Applications</span>
                </div>
            </div>
        </div>

        <div class="filters">
            <div class="filter-section">
                <span class="filter-label">Status:</span>
                <div class="filter-buttons">
                <a href="/job/jobList?filter=all" class="filter-button @(Model.CurrentFilter == "all" ? "active" : "")">All Jobs</a>
                <a href="/job/jobList?filter=active" class="filter-button @(Model.CurrentFilter == "active" ? "active" : "")">Active</a>
                <a href="/job/jobList?filter=inactive" class="filter-button @(Model.CurrentFilter == "inactive" ? "inavtive" : "")">Inactive</a>
                <a href="/job/jobList?filter=expired" class="filter-button @(Model.CurrentFilter == "expired" ? "expired" : "")">Expired</a>

                </div>
            </div>

            <a asp-action="AddJob" asp-controller="Job" class="add-job-btn">
                <i class="fas fa-plus"></i>
                Add New Job
            </a>
        </div>

        <div class="jobs-grid" id="jobsGrid">
            @if(Model.jobs !=null && Model.jobs.Any())
            {
                foreach(var job in Model.jobs)
                {
                var statusClass = job.Status == "inactive" ? "inactive" : "";
                <div class="job-card @(statusClass)" data-job-id="@job.Id">
                    <div class="job-header">
                        <div class="job-icon">@GetInitials(job.Title)</div>
                        <div class="job-title-section">
                            <h3 class="job-title">@job.Title</h3>
                            <p class="job-company">@job.Company</p>
                        </div>
                        <div class="job-menu">
                            <button class="menu-button" onclick="toggleMenu(@job.Id)">
                                <i class="fas fa-ellipsis-v"></i>
                            </button>
                            <div class="dropdown-menu" id="menu-@job.Id">
                                <button class="dropdown-item" onclick="editJob(@job.Id)">
                                    <i class="fas fa-edit"></i> Edit Job
                                </button>
                                <button class="dropdown-item" onclick="toggleJobStatus(@job.Id)">
                                    <i class="fas fa-@(job.Status == "active" ? "pause" : "play")"></i>
                                    @(job.Status == "active" ? "Deactivate" : "Activate")
                                </button>
                                <a class="dropdown-item" href="/Job/ViewAppsSummary/@job.Id">
                                    <i class="fas fa-users"></i> View Applications (@job.Applications)
                                </a>
                                <button class="dropdown-item danger" onclick="confirmDelete(@job.Id)">
                                    <i class="fas fa-trash"></i> Delete
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="job-meta">
                        <div class="job-meta-item">
                            <i class="fas fa-map-marker-alt location-icon"></i>
                            @job.Location
                        </div>
                        <div class="job-meta-item">
                            <i class="fas fa-briefcase"></i>
                            @job.Type
                        </div>
                        <div class="job-meta-item">
                            <i class="fas fa-users"></i>
                            @job.Presence
                        </div>
                        <div class="job-meta-item">
                            <i class="fas fa-user-check"></i>
                            @job.Applications applications
                        </div>
                    </div>

                    <p class="job-description">@job.Description</p>

                    <div class="job-footer">
                        <div class="job-salary">@job.SalaryRange</div>
                        <div class="job-status">
                            @GetStatusBadge(job.Status, job.ExpiresOn)
                            <span class="job-date">Created @job.CreatedOn.ToString("MMM dd, yyyy")</span>
                        </div>
                    </div>
                </div>
                }
            }
        </div>

        <div class="empty-state" id="emptyState" style="display: none;">
            <i class="fas fa-briefcase"></i>
            <h3>No jobs found</h3>
            <p>You haven't created any job postings yet</p>
            <a asp-action="AddJob" class="add-job-btn">
                <i class="fas fa-plus"></i>
                Create Your First Job
            </a>
        </div>
    

    <!-- Delete Confirmation Modal -->
    <div class="modal" id="deleteModal">
        <div class="modal-content">
            <h3>Delete Job Posting</h3>
            <p>Are you sure you want to delete this job? This action cannot be undone.</p>
            <div class="modal-buttons">
                <button class="modal-btn primary" id="confirmDelete">Delete</button>
                <button class="modal-btn secondary" id="cancelDelete">Cancel</button>
            </div>
        </div>
    </div>

    <script>
        function updateStats() {
            document.getElementById('totalJobs').textContent = jobs.length;
            document.getElementById('activeJobs').textContent = jobs.filter(job => job.status === 'active').length;
            document.getElementById('applications').textContent = jobs.reduce((sum, job) => sum + job.applications, 0);
        }

        function toggleMenu(jobId) {
            // Close all other menus
            document.querySelectorAll('.dropdown-menu').forEach(menu => {
                if (menu.id !== `menu-${jobId}`) {
                    menu.classList.remove('show');
                }
            });

            // Toggle current menu
            const menu = document.getElementById(`menu-${jobId}`);
            menu.classList.toggle('show');
        }



                function toggleJobStatus(jobId) {
          fetch(`/Job/ToggleJobStatus/${jobId}`, {
            method: 'POST',
            headers: {
              'RequestVerificationToken': getAntiForgeryToken(),  // if you use anti-forgery
              'Content-Type': 'application/json'
            }
          })
          .then(response => {
            if (response.ok) {
              location.reload(); // or update UI dynamically
            } else {
              alert('Failed to toggle job status');
            }
          });
        }

        function getAntiForgeryToken() {
          return document.querySelector('input[name="__RequestVerificationToken"]').value;
        }


                function confirmDelete(jobId) {
          if (confirm("Are you sure you want to delete this job?")) {
            deleteJob(jobId);
          }
        }

        function deleteJob(jobId) {
          fetch(`/Job/DeleteJob/${jobId}`, {
            method: 'POST',
            headers: {
              'RequestVerificationToken': getAntiForgeryToken()
            }
          })
          .then(response => {
            if (response.ok) {
              location.reload();
            } else {
              alert('Failed to delete job');
            }
          });
        }

        function closeAllMenus() {
            document.querySelectorAll('.dropdown-menu').forEach(menu => {
                menu.classList.remove('show');
            });
        }
        function editJob(jobId) {
            window.location.href = `/Job/EditJob/${jobId}`;
        }

        // Event listeners
        document.addEventListener('click', function(e) {
            if (!e.target.closest('.job-menu')) {
                closeAllMenus();
            }
        });
    </script>
</body>
</html>

@functions {
    public string GetInitials(string title)
    {
        if (string.IsNullOrEmpty(title)) return "";
        var words = title.Split(' ');
        return string.Concat(words.Select(w => w[0])).ToUpper().Substring(0, Math.Min(2, words.Length));
    }

    public IHtmlContent GetStatusBadge(string status, DateTime? expiresOn)
    {
        // Return HTML string with badge class based on status
        if (expiresOn.HasValue && expiresOn.Value < DateTime.UtcNow)
        {
            return new HtmlString("<span class='badge badge-danger'>Expired</span>");
        }

        return status switch
        {
            "active" => new HtmlString("<span class='badge badge-success'>Active</span>"),
            "inactive" => new HtmlString("<span class='badge badge-secondary'>Inactive</span>"),
            _ => new HtmlString("<span class='badge badge-warning'>Unknown</span>")
        };
    }
}
