@using LinkifyDAL.Enums
@using LinkifyPLL.Models
@using Microsoft.AspNetCore.Html
@{
    ViewData["Title"] = "Job Applications";
    Layout = "~/Views/Shared/_AppLayout.cshtml";
}
@model JobApplicationsMV
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Job Applications - @Model.JobTitle</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 50%, #a855f7 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
            color: white;
        }

        .back-button {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            color: white;
            text-decoration: none;
            margin-bottom: 20px;
            font-weight: 500;
            transition: all 0.2s;
            opacity: 0.9;
        }

            .back-button:hover {
                opacity: 1;
                transform: translateX(-3px);
            }

        .header h1 {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 8px;
            letter-spacing: -0.025em;
        }

        .header p {
            font-size: 1.1rem;
            opacity: 0.9;
            font-weight: 400;
        }

        .job-info-card {
            background: white;
            border-radius: 20px;
            padding: 24px;
            margin-bottom: 30px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        }

        .job-summary {
            display: flex;
            align-items: center;
            gap: 20px;
            margin-bottom: 20px;
        }

        .job-icon {
            width: 64px;
            height: 64px;
            background: linear-gradient(135deg, #6366f1, #8b5cf6);
            border-radius: 16px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 700;
            font-size: 1.5rem;
        }

        .job-details h2 {
            font-size: 1.5rem;
            color: #111827;
            margin-bottom: 4px;
        }

        .job-company {
            color: #6b7280;
            font-size: 1rem;
            margin-bottom: 8px;
        }

        .job-meta-inline {
            display: flex;
            gap: 20px;
            color: #6b7280;
            font-size: 0.9rem;
        }

        .stats-bar {
            display: flex;
            justify-content: center;
            gap: 40px;
            margin: 30px 0;
            flex-wrap: wrap;
        }

        .stat {
            text-align: center;
            color: white;
        }

        .stat-number {
            font-size: 2rem;
            font-weight: 700;
            display: block;
        }

        .stat-label {
            font-size: 0.9rem;
            opacity: 0.8;
        }

        .filters {
            background: white;
            border-radius: 20px;
            padding: 20px 30px;
            margin-bottom: 30px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            display: flex;
            align-items: center;
            justify-content: space-between;
            flex-wrap: wrap;
            gap: 20px;
        }

        .filter-section {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .filter-label {
            font-weight: 600;
            color: #374151;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .filter-buttons {
            display: flex;
            gap: 8px;
            flex-wrap: wrap;
        }

        .filter-button {
            padding: 8px 16px;
            border: 1.5px solid #e5e7eb;
            border-radius: 20px;
            background: white;
            color: #6b7280;
            font-size: 0.875rem;
            cursor: pointer;
            transition: all 0.2s;
            font-weight: 500;
            text-decoration: none;
        }

            .filter-button.active {
                background: #6366f1;
                color: white;
                border-color: #6366f1;
            }

            .filter-button:hover:not(.active) {
                border-color: #6366f1;
                color: #6366f1;
            }

        .applications-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));
            gap: 24px;
        }

        .application-card {
            background: white;
            border-radius: 20px;
            padding: 24px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            transition: all 0.2s;
            border-left: 4px solid transparent;
        }

            .application-card:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            }

            .application-card.pending {
                border-left-color: #f59e0b;
            }

            .application-card.under-review {
                border-left-color: #3b82f6;
            }

            .application-card.interviewing {
                border-left-color: #8b5cf6;
            }

            .application-card.accepted {
                border-left-color: #10b981;
            }

            .application-card.rejected {
                border-left-color: #ef4444;
            }

            .application-card.archived {
                border-left-color: #6b7280;
                opacity: 0.8;
            }

        .applicant-header {
            display: flex;
            align-items: center;
            gap: 16px;
            margin-bottom: 16px;
        }

        .applicant-avatar {
            width: 50px;
            height: 50px;
            border-radius: 12px;
            background: linear-gradient(135deg, #6366f1, #8b5cf6);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 1.1rem;
        }

        .applicant-info h3 {
            font-size: 1.1rem;
            font-weight: 600;
            color: #111827;
            margin-bottom: 4px;
        }

        .applicant-email {
            color: #6b7280;
            font-size: 0.9rem;
        }

        .application-meta {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 12px;
            margin-bottom: 16px;
        }

        .meta-item {
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 0.85rem;
            color: #6b7280;
        }

            .meta-item i {
                width: 14px;
                text-align: center;
            }

        .application-summary {
            color: #6b7280;
            line-height: 1.5;
            margin-bottom: 16px;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .application-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding-top: 16px;
            border-top: 1px solid #f3f4f6;
        }

        .status-badge {
            padding: 6px 12px;
            border-radius: 12px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

            .status-badge.pending {
                background: #fef3c7;
                color: #92400e;
            }

            .status-badge.under-review {
                background: #dbeafe;
                color: #1e40af;
            }

            .status-badge.interviewing {
                background: #ede9fe;
                color: #7c3aed;
            }

            .status-badge.accepted {
                background: #dcfce7;
                color: #166534;
            }

            .status-badge.rejected {
                background: #fee2e2;
                color: #991b1b;
            }

            .status-badge.archived {
                background: #f3f4f6;
                color: #6b7280;
            }

        .view-details-btn {
            background: linear-gradient(135deg, #6366f1, #8b5cf6);
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 8px;
            font-size: 0.85rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 6px;
        }

            .view-details-btn:hover {
                transform: translateY(-1px);
                box-shadow: 0 4px 12px rgba(99, 102, 241, 0.4);
            }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: white;
        }

            .empty-state i {
                font-size: 4rem;
                margin-bottom: 16px;
                opacity: 0.6;
            }

            .empty-state h3 {
                font-size: 1.5rem;
                margin-bottom: 8px;
            }

            .empty-state p {
                opacity: 0.8;
            }

        @@media (max-width: 768px) {
            .applications-grid

        {
            grid-template-columns: 1fr;
        }

        .filters {
            flex-direction: column;
            align-items: flex-start;
        }

        .job-summary {
            flex-direction: column;
            text-align: center;
        }

        .stats-bar {
            gap: 20px;
        }

        .application-meta {
            grid-template-columns: 1fr;
        }

        }
    </style>
</head>
<body>
    <partial name="_NavPartial" />

    <div class="container">
        <a href="/Job/JobList" class="back-button">
            <i class="fas fa-arrow-left"></i>
            Back to My Jobs
        </a>

        <div class="header">
            <h1>Job Applications</h1>
            <p>Manage candidates for your job posting</p>
        </div>

        <div class="job-info-card">
            <div class="job-summary">
                <div class="job-icon">@GetInitials(Model.JobTitle)</div>
                <div class="job-details">
                    <h2>@Model.JobTitle</h2>
                    <p class="job-company">@Model.JobCompany</p>
                    <div class="job-meta-inline">
                        <span><i class="fas fa-map-marker-alt"></i> @Model.JobLocation</span>
                        <span><i class="fas fa-briefcase"></i> @Model.JobType</span>
                        <span><i class="fas fa-calendar"></i> Posted @Model.JobCreatedOn.ToString("MMM dd, yyyy")</span>
                    </div>
                </div>
            </div>

            <div class="stats-bar">
                <div class="stat">
                    <span class="stat-number">@Model.TotalApplications</span>
                    <span class="stat-label">Total Applications</span>
                </div>
                <div class="stat">
                    <span class="stat-number">@Model.PendingApplications</span>
                    <span class="stat-label">Pending Review</span>
                </div>
                <div class="stat">
                    <span class="stat-number">@Model.InterviewingApplications</span>
                    <span class="stat-label">In Interview</span>
                </div>
                <div class="stat">
                    <span class="stat-number">@Model.AcceptedApplications</span>
                    <span class="stat-label">Accepted</span>
                </div>
            </div>
        </div>

        <div class="filters">
            <div class="filter-section">
                <span class="filter-label">Status:</span>
                <div class="filter-buttons">
                    <a href="/Job/ViewAppsSummary?id=@Model.JobId&filter=all" class="filter-button @(Model.CurrentFilter == "all" ? "active" : "")">All</a>
                    <a href="/Job/ViewAppsSummary?id=@Model.JobId&filter=pending" class="filter-button @(Model.CurrentFilter == "pending" ? "active" : "")">Pending</a>
                    <a href="/Job/ViewAppsSummary?id=@Model.JobId&filter=under-review" class="filter-button @(Model.CurrentFilter == "under-review" ? "active" : "")">Under Review</a>
                    <a href="/Job/ViewAppsSummary?id=@Model.JobId&filter=interviewing" class="filter-button @(Model.CurrentFilter == "interviewing" ? "active" : "")">Interviewing</a>
                    <a href="/Job/ViewAppsSummary?id=@Model.JobId&filter=accepted" class="filter-button @(Model.CurrentFilter == "accepted" ? "active" : "")">Accepted</a>
                    <a href="/Job/ViewAppsSummary?id=@Model.JobId&filter=rejected" class="filter-button @(Model.CurrentFilter == "rejected" ? "active" : "")">Rejected</a>
                    <a href="/Job/ViewAppsSummary?id=@Model.JobId&filter=archived" class="filter-button @(Model.CurrentFilter == "archived" ? "active" : "")">Archived</a>
                </div>
            </div>
        </div>

        <div class="applications-grid">
            @if (Model.Applications != null && Model.Applications.Any())
            {
                foreach (var application in Model.Applications)
                {
                    <div class="application-card @GetStatusClass(application.Status.ToString())">
                        <div class="applicant-header">
                            <div class="applicant-avatar">@GetInitials($"{application.FirstName} {application.LastName}")</div>
                            <div class="applicant-info">
                                <h3>@application.FirstName @application.LastName</h3>
                                <p class="applicant-email">@application.Email</p>
                            </div>
                        </div>

                        <div class="application-meta">
                            <div class="meta-item">
                                <i class="fas fa-calendar"></i>
                                Applied @application.AppliedOn.ToString("MMM dd, yyyy")
                            </div>
                            <div class="meta-item">
                                <i class="fas fa-phone"></i>
                                @application.Phone
                            </div>
                           @*  <div class="meta-item">
                                <i class="fas fa-graduation-cap"></i>
                                @application.Experience years exp.
                            </div> *@
                        </div>

                        <div class="application-summary">
                            @application.CoverLetter
                        </div>

                        <div class="application-footer">
                            @GetStatusBadge(application.Status.ToString())
                            <a href="/Job/DisplayDetails/@application.Id" class="view-details-btn">
                                <i class="fas fa-eye"></i>
                                See More
                            </a>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="empty-state">
                    <i class="fas fa-users"></i>
                    <h3>No Applications Yet</h3>
                    <p>This job hasn't received any applications yet.</p>
                </div>
            }
        </div>
    </div>
</body>
</html>

@functions {
    public string GetInitials(string name)
    {
        if (string.IsNullOrEmpty(name)) return "?";
        var words = name.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        if (words.Length == 1) return words[0].Substring(0, 1).ToUpper();
        return $"{words[0][0]}{words[words.Length - 1][0]}".ToUpper();
    }

    public string GetStatusClass(string status)
    {
        return status?.ToLower().Replace(" ", "-") ?? "pending";
    }

    public IHtmlContent GetStatusBadge(string status)
    {
        var normalizedStatus = status?.ToLower().Replace(" ", "-") ?? "pending";
        var displayStatus = status ?? "Pending";

        return new HtmlString($"<span class=\"status-badge {normalizedStatus}\">{displayStatus}</span>");
    }
    
}