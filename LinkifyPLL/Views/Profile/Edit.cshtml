@model LinkifyBLL.ModelView.ProfileMV

@{
    ViewData["Title"] = "Edit Profile";
    Layout = "~/Views/Shared/_AppLayout.cshtml";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">
                        <i class="fas fa-user-edit"></i>
                        Edit Your Profile
                    </h3>
                </div>
                <div class="card-body">

                    @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })

                    @using (Html.BeginForm("EditProfile", "Profile", FormMethod.Post, new { enctype = "multipart/form-data", @class = "needs-validation", novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.Id)

                        <!-- Profile Image Section -->
                        <div class="form-group mb-4 text-center">
                            <label class="form-label fw-bold">Profile Picture</label>
                            <div class="mb-3">
                                @if (!string.IsNullOrEmpty(Model.ImgPath))
                                {
                                    <img src="@Model.ImgPath" alt="Profile Image" class="rounded-circle"
                                         style="width: 120px; height: 120px; object-fit: cover;" id="profilePreview" />
                                }
                                else
                                {
                                    <div class="bg-secondary rounded-circle d-flex align-items-center justify-content-center"
                                         style="width: 120px; height: 120px; margin: 0 auto;">
                                        <i class="fas fa-user fa-3x text-white"></i>
                                    </div>
                                }
                            </div>
                            <input type="file" name="ProfileImage" class="form-control" accept="image/*"
                                   onchange="previewImage(event)" />
                            <small class="text-muted">Supported: JPG, PNG, GIF (Max 5MB)</small>
                        </div>

                        <!-- Basic Information -->
                        <fieldset class="border p-3 mb-4 rounded">
                            <legend class="w-auto px-2 h5 text-primary">
                                <i class="fas fa-user"></i> Basic Information
                            </legend>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        @Html.LabelFor(m => m.Name, new { @class = "form-label fw-bold" })
                                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", required = "required" })
                                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger small" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        @Html.LabelFor(m => m.Email, new { @class = "form-label fw-bold" })
                                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", type = "email" })
                                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger small" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        @Html.LabelFor(m => m.PhoneNumber, new { @class = "form-label fw-bold" })
                                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger small" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        @Html.LabelFor(m => m.Location, new { @class = "form-label fw-bold" })
                                        @Html.TextBoxFor(m => m.Location, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Location, "", new { @class = "text-danger small" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(m => m.Bio, new { @class = "form-label fw-bold" })
                                @Html.TextAreaFor(m => m.Bio, new { @class = "form-control", rows = 4, placeholder = "Tell us about yourself..." })
                                @Html.ValidationMessageFor(m => m.Bio, "", new { @class = "text-danger small" })
                            </div>
                        </fieldset>

                        <!-- Professional Information -->
                        <fieldset class="border p-3 mb-4 rounded">
                            <legend class="w-auto px-2 h5 text-success">
                                <i class="fas fa-briefcase"></i> Professional Information
                            </legend>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        @Html.LabelFor(m => m.Title, new { @class = "form-label fw-bold" })
                                        @Html.TextBoxFor(m => m.Title, new { @class = "form-control", placeholder = "e.g., Software Developer" })
                                        @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger small" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        @Html.LabelFor(m => m.Company, new { @class = "form-label fw-bold" })
                                        @Html.TextBoxFor(m => m.Company, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Company, "", new { @class = "text-danger small" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        @Html.LabelFor(m => m.Industry, new { @class = "form-label fw-bold" })
                                        @Html.TextBoxFor(m => m.Industry, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Industry, "", new { @class = "text-danger small" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        @Html.LabelFor(m => m.YearsOfExperience, new { @class = "form-label fw-bold" })
                                        @Html.TextBoxFor(m => m.YearsOfExperience, new { @class = "form-control", type = "number", min = "0", max = "50" })
                                        @Html.ValidationMessageFor(m => m.YearsOfExperience, "", new { @class = "text-danger small" })
                                    </div>
                                </div>
                            </div>
                        </fieldset>

                        <!-- Social Links -->
                        <fieldset class="border p-3 mb-4 rounded">
                            <legend class="w-auto px-2 h5 text-info">
                                <i class="fas fa-link"></i> Social Links
                            </legend>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        @Html.LabelFor(m => m.LinkedInUrl, new { @class = "form-label fw-bold" })
                                        @Html.TextBoxFor(m => m.LinkedInUrl, new { @class = "form-control", type = "url", placeholder = "https://linkedin.com/in/username" })
                                        @Html.ValidationMessageFor(m => m.LinkedInUrl, "", new { @class = "text-danger small" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        @Html.LabelFor(m => m.GitHubUrl, new { @class = "form-label fw-bold" })
                                        @Html.TextBoxFor(m => m.GitHubUrl, new { @class = "form-control", type = "url", placeholder = "https://github.com/username" })
                                        @Html.ValidationMessageFor(m => m.GitHubUrl, "", new { @class = "text-danger small" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(m => m.PortfolioUrl, new { @class = "form-label fw-bold" })
                                @Html.TextBoxFor(m => m.PortfolioUrl, new { @class = "form-control", type = "url", placeholder = "https://yourportfolio.com" })
                                @Html.ValidationMessageFor(m => m.PortfolioUrl, "", new { @class = "text-danger small" })
                            </div>
                        </fieldset>

                        <!-- Account Settings -->
                        <fieldset class="border p-3 mb-4 rounded">
                            <legend class="w-auto px-2 h5 text-warning">
                                <i class="fas fa-cog"></i> Account Settings
                            </legend>

                            
                        </fieldset>

                        <!-- Form Actions -->
                        <div class="d-flex justify-content-between">
                            <a href="@Url.Action("Index", "Account")" class="btn btn-secondary">
                                <i class="fas fa-times"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-primary px-4">
                                <i class="fas fa-save"></i> Save Changes
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

    <script>
        function previewImage(event) {
            const file = event.target.files[0];
            if (file) {
                // Validate file size (5MB max)
                if (file.size > 5 * 1024 * 1024) {
                    alert('File size must be less than 5MB');
                    event.target.value = '';
                    return;
                }

                // Validate file type
                const validTypes = ['image/jpeg', 'image/png', 'image/gif'];
                if (!validTypes.includes(file.type)) {
                    alert('Please select a valid image file (JPG, PNG, GIF)');
                    event.target.value = '';
                    return;
                }

                const reader = new FileReader();
                reader.onload = function(e) {
                    const preview = document.getElementById('profilePreview');
                    if (preview) {
                        preview.src = e.target.result;
                    }
                };
                reader.readAsDataURL(file);
            }
        }

        // Simple form validation
        $(document).ready(function() {
            // Add custom validation rules if needed
            $.validator.addMethod("maxFileSize", function(value, element, params) {
                if (element.files.length === 0) return true;
                return element.files[0].size <= params;
            }, "File size must be less than 5MB");

            // Apply validation
            $('form').validate({
                rules: {
                    Name: {
                        required: true,
                        minlength: 2
                    },
                    Email: {
                        email: true
                    },
                    ProfileImage: {
                        maxFileSize: 5242880 // 5MB in bytes
                    }
                },
                messages: {
                    Name: {
                        required: "Name is required",
                        minlength: "Name must be at least 2 characters"
                    },
                    Email: "Please enter a valid email address"
                }
            });
        });
    </script>
}
